{"version":3,"sources":["webpack:///./src/framework/scss/fonts/RubikOne.scss","webpack:///./src/framework/scss/presets/base.scss","webpack:///./src/framework/scss/vars/colors.scss","webpack:///./src/framework/scss/presets/constructs.scss","webpack:///./src/framework/scss/mixins.scss","webpack:///./src/framework/scss/modifiers.scss","webpack:///./src/scss/index.scss","webpack:///./src/framework/scss/functions.scss"],"names":[],"mappings":"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SACC,WAAW,CADZ,SACC,WAAW,CADZ,SACC,WAAW,CADZ,SACC,WAAW,CACX,WAKA,aAAa,CADd,WACC,aAAa,CADd,WACC,aAAa,CADd,WACC,aAAa,CADd,WACC,aAAa,CADd,WACC,aAAa,CADd,WACC,aAAa,CADd,WACC,aAAa,CADd,WACC,aAAa,CACb,eAMD,iBAAkB,CAClB,sBAAuB,CACvB,yBAA0B,CAC1B,KAIC,kBAAuB,CADxB,KACC,kBAAuB,CADxB,KACC,kBAAuB,CADxB,KACC,kBAAuB,CADxB,KACC,kBAAuB,CADxB,KACC,kBAAuB,CADxB,KACC,kBAAuB,CADxB,KACC,kBAAuB,CADxB,KACC,kBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CADxB,MACC,mBAAuB,CACvB,SAMD,gBAAiB,CACjB,SAGA,eAAgB,CAChB,SAGA,iBAAkB,CAClB,SAGA,kBAAmB,CACnB,QAGA,wBAAyB,CACzB,QAGA,wBAAyB,CACzB,OAIA,iBAAkB,CAClB,OAGA,iBAAkB,CAClB,OAGA,cAAe,CACf,OAGA,eAAgB,CAChB,uBAAwB,CACxB,MAKA,QAAS,CACT,MAGA,KAAM,CACN,OAGA,MAAO,CACP,QAGA,OAAQ,CACR,QAIC,mBAAwB,CADzB,QACC,mBAAwB,CADzB,QACC,mBAAwB,CADzB,QACC,mBAAwB,CADzB,QACC,mBAAwB,CADzB,QACC,mBAAwB,CADzB,QACC,mBAAwB,CADzB,QACC,mBAAwB,CADzB,QACC,mBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CADzB,SACC,oBAAwB,CACxB,QAKA,gBAAqB,CADtB,QACC,gBAAqB,CADtB,QACC,gBAAqB,CADtB,QACC,gBAAqB,CADtB,QACC,gBAAqB,CADtB,QACC,gBAAqB,CADtB,QACC,gBAAqB,CADtB,QACC,gBAAqB,CADtB,QACC,gBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CADtB,SACC,iBAAqB,CACrB,SAKA,iBAAsB,CADvB,SACC,iBAAsB,CADvB,SACC,iBAAsB,CADvB,SACC,iBAAsB,CADvB,SACC,iBAAsB,CADvB,SACC,iBAAsB,CADvB,SACC,iBAAsB,CADvB,SACC,iBAAsB,CADvB,SACC,iBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CADvB,UACC,kBAAsB,CACtB,UAKA,kBAAuB,CADxB,UACC,kBAAuB,CADxB,UACC,kBAAuB,CADxB,UACC,kBAAuB,CADxB,UACC,kBAAuB,CADxB,UACC,kBAAuB,CADxB,UACC,kBAAuB,CADxB,UACC,kBAAuB,CADxB,UACC,kBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CADxB,WACC,mBAAuB,CC9YzB,EACI,SAAU,CACb,eAGG,iBAAkB,CAClB,kBAAmB,CACnB,gBAAiB,CACjB,WAAY,CACZ,eAAgB,CAKnB,0BAVD,eAQQ,kBAAmB,CAE1B,CAED,aACI,kBAAmB,CACnB,UAAW,CF4Db,oCG9EkH,CHsJ5G,wCGtJ4G,CDgBpH,mBAOQ,UAAW,CFuDjB,kCG9EkH,CHiH5G,wCGjH4G,CH0H5G,yCG1H4G,CDgBpH,uBAWY,UAAW,CACX,WAAY,CACf,0BAbT,aAiBQ,cAAe,CACf,4BAA6B,CAEpC,CAED,OACI,uBAAwB,CACxB,eAAgB,CAChB,aAAc,CFWjB,kEAAoF,CACpF,oEAAsF,CACrF,qBAd0G,CAyEpG,uCGjH4G,CDsCpH,eAQQ,aAAc,CACjB,0BATL,OAYQ,QAAS,CAEhB,CAED,YACI,iBAAkB,CAClB,KAAM,CACN,OAAQ,CACR,WAAY,CFQf,oCGlEmH,CD4DhH,uCAAwC,CACxC,qBAAsB,CACtB,+BAAgC,CAChC,2BAA4B,CAO/B,0BAhBD,YAYQ,UAAW,CACX,SAAU,CACV,WAAY,CAEnB,CAED,mBFNC,kCGlEmH,CH8ElH,iCG9EkH,CHiH5G,uCGjH4G,CDwEpH,uBFME,iCG9EkH,CD+E5G,UAAW,CAPnB,6BAUY,8FAA+F,CAClG,0BAXT,mBAeQ,QAAS,CAEhB,CAED,cACI,iBAAkB,CAClB,iBAAkB,CAClB,gBAAiB,CACjB,SAAU,CACV,QAAS,CACT,MAAO,CF7CV,+DAAoF,CACpF,oEAAsF,CACrF,qBAd0G,CE2DxG,aAAc,CACd,wBAAyB,CACzB,oBAAqB,CACrB,eAAgB,CFpCnB,kCGlEmH,CH8ElH,kCG9EkH,CDyGhH,qDAAiD","file":"./css/style.bundle.css","sourcesContent":["@font-face {\n    font-family: 'Rubik One';\n    src: url(\"../fonts/Rubik/RubikOne.ttf\") format(\"woff\");\n    src: url(\"../fonts/Rubik/RubikOne.ttf\") format(\"woff2\");\n    src: url(\"../fonts/Rubik/RubikOne.ttf\") format(\"truetype\");\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url(\"../fonts/Roboto/Roboto-Medium.ttf\") format(\"woff\");\n    src: url(\"../fonts/Roboto/Roboto-Medium.ttf\") format(\"woff2\");\n    src: url(\"../fonts/Roboto/Roboto-Medium.ttf\") format(\"truetype\");\n    font-weight: 400;\n    font-style: normal;\n}","\n* {\n    padding: 0;\n    margin: 0;\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n    transition: all .2s;\n}\n\n*:active, *:focus {\n\toutline: none;\n}\n\n*::-moz-focus-inner {\n\tborder: 0;\n}\n\nh1 {\n\tcolor: $h1-color;\n}\n\nh2 {\n\tcolor: $h2-color;\n}\n\nh3 {\n\tcolor: $h3-color;\n}\n\np {\n\tcolor: $article-color;\n}\n\nul {\n\tmargin: 0;\n}\n\nli {\n\tlist-style: none;\n}\n\n\nhtml {\n\t\toverflow-x: hidden;\n\t\twidth: 100vw;\n}\n\nbody {\n\toverflow-x: hidden;\n}\n\ninput, button, select {\n  border: none;\n  resize: none;\n  font-family: inherit;\n  font-size: inherit;\n}\n\nimg {\n  width: 100%;\n  max-width: 100%;\n  height: auto;\n  align-self: flex-start;\n  justify-self: flex-start;\n}\n\ndiv {\n  display: flex;\n}\n","$article-color: black;\n$h1-color: black;\n$h2-color: black;\n$h3-color: black;\n$accent-1-color: blue;\n$background-color: black;\n\n$black: rgba(53, 53, 53, 1);\n$transparent: rgba(255, 255, 255, 0);\n$green: rgba(0, 228, 140, 1);\n$red: rgba(228, 57, 53, 1);\n$blue: rgba(65, 67, 149, 1);\n$purple: rgba(145, 154, 226, 1);\n\n$article_black: rgba(36, 41, 46, 1);\n$d_purple: rgba(90, 93, 195, 1);\n","// -c- containers\n// -e- elements\n\n\n.ROW { //constant field\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n@mixin CONFIGURE-c-ROW($width, $reverse: false) { // incapsulated standart field\n  .ROW {\n    @if ($reverse == true) {\n      flex-direction: row-reverse;\n    }\n    width: RelativeUnits($width, 0.7);\n    @content; // users additional field\n  }\n}\n\n.COLUMN { //constant field\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n@mixin CONFIGURE-c-COLUMN($width, $reverse: false) { // incapsulated standart field\n  .COLUMN {\n    @if ($reverse == true) {\n      flex-direction: column-reverse;\n    }\n    width: RelativeUnits($width, 0.7);\n    @content; // users additional field\n  }\n}\n\n.MAIN-c {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n}\n@mixin CONFIGURE-c-MAIN-c($width, $max-width: 80vw, $reverse: false) { // incapsulated standart field\n  .MAIN-c {\n    @if ($reverse == true) {\n      flex-direction: column-reverse;\n    }\n    width: RelativeUnits($width, 0.7);\n    max-width: $max-width;\n    @content; // users additional field\n  }\n}\n\n.MAIN-l {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  margin: 0 auto;\n}\n@mixin CONFIGURE-c-MAIN-l($width, $max-width: 80vw, $reverse: false) { // incapsulated standart field\n  .MAIN-l {\n    @if ($reverse == true) {\n      flex-direction: column-reverse;\n    }\n    width: RelativeUnits($width, 0.7);\n    max-width: $max-width;\n    @content; // users additional field\n  }\n}\n\n.MAIN-r {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: end;\n  margin: 0 auto;\n}\n@mixin CONFIGURE-c-MAIN-r($width, $max-width: 80vw, $reverse: false) { // incapsulated standart field\n  .MAIN-r {\n    @if ($reverse == true) {\n      flex-direction: column-reverse;\n    }\n    width: RelativeUnits($width, 0.7);\n    max-width: $max-width;\n    @content; // users additional field\n  }\n}\n\n.container-align {\n  width: fit-content;\n  * {\n    text-align: justify;\n  }\n  *:after {\n    content: \"\";\n    display: inline-block;\n    width: 100%;\n  }\n}\n\n\n\nsection {\n}\n@mixin CONFIGURE-c-SECTION() {\n  section {\n\n  }\n}\n","@import \"global-scaler.scss\";\n\n//-adaptivity and relativity\n\n@mixin _desktop-middle {\n    @media (max-width: 1920px){\n        @content;\n    }\n}\n\n@mixin _desktop-small {\n    @media (max-width: 1366px){\n        @content;\n    }\n}\n\n@mixin _tablet-big {\n    @media (max-width: 1024px){\n        @content;\n    }\n}\n\n@mixin _tablet-middle {\n    @media (max-width: 768px){\n        @content;\n    }\n}\n\n@mixin _tablet-small {\n    @media (max-width: 600px){\n        @content;\n    }\n}\n\n@mixin _phone-big {\n    @media (max-width: 480px){\n        @content;\n    }\n}\n\n@mixin _phone-small{\n    @media (max-width: 370px){\n        @content;\n    }\n}\n\n//-text\n\n@mixin FontLineSize($vmin-scaler, $vw-scaler, $rem-scaler, $font-size, $line-height, $letter-spacing: normal, $mode: $GLOBAL_SCALER) {\n\n\t$rem-font: ($rem-scaler * $font-size)/$font_size-global;\n\t$rem-line: ($rem-scaler * ($font-size + $line-height))/$font_size-global;\n\n\t$vmin-font: ($vmin-scaler * $font-size)/min(GetDeviceScreen($mode, horizontal), GetDeviceScreen($mode, vertical));\n  @debug 'min ' + min(GetDeviceScreen($mode, horizontal), GetDeviceScreen($mode, vertical));\n\t$vmin-line: ($vmin-scaler * ($font-size + $line-height))/min(GetDeviceScreen($mode, horizontal), GetDeviceScreen($mode, vertical));\n\n\t$vw-font: ($vw-scaler * $font-size)/GetDeviceScreen($mode, horizontal);\n\t$vw-line: ($vw-scaler * ($font-size + $line-height))/GetDeviceScreen($mode, horizontal);\n\n\tfont-size: calc(#{$rem-font} * 1rem + #{$vmin-font} * 100vmin + #{$vw-font} * 100vw);\n\tline-height: calc(#{$rem-line} * 1rem + #{$vmin-line} * 100vmin + #{$vw-line} * 100vw);\n  letter-spacing: $letter-spacing;\n}\n\n\n//-properties\n\n@mixin bg-picture($arg, $mode) {\n  background: $arg  center 100% no-repeat;\n  background-size: $mode;\n}\n\n@mixin width($width, $scaler: 1, $mode: $GLOBAL_SCALER) {\n\twidth: RelativeUnits($width, $scaler, $mode, horizontal);\n}\n\n@mixin min-width($min-width, $scaler: 1, $mode: $GLOBAL_SCALER) {\n  min-width: RelativeUnits($min-width, $scaler, $mode, horizontal);\n}\n\n@mixin max-width($max-width, $scaler: 1, $mode: $GLOBAL_SCALER) {\n  max-width: RelativeUnits($max-width, $scaler, $mode, horizontal);\n}\n\n@mixin height($min-height, $scaler: 1, $mode: $GLOBAL_SCALER) {\n  height: RelativeUnits($min-height, $scaler, $mode, horizontal);\n}\n\n@mixin min-height($min-height, $scaler: 1, $mode: $GLOBAL_SCALER) {\n  min-height: RelativeUnits($min-height, $scaler, $mode, horizontal);\n}\n\n@mixin max-height($max-height, $scaler: 1, $mode: $GLOBAL_SCALER) {\n  max-height: RelativeUnits($max-height, $scaler, $mode, horizontal);\n}\n\n@mixin margin-padding($LIST-margin-padding, $mode: $GLOBAL_SCALER) { //\"m-r\": (120, 0.5), \"p-t\": 320\n  @each $name-property, $value-property in $LIST-margin-padding {\n\n  //margins\n    @if $name-property == 'm-t' {\n      @if length($value-property) > 1 {\n        margin-top: RelativeUnits(nth($value-property, 1), nth($value-property, 2), $mode);\n      }\n      @else {\n        margin-top: RelativeUnits(nth($value-property, 1), 1, $mode);\n      }\n    }\n\n    @if $name-property == 'm-b' {\n      @if length($value-property) > 1 {\n        margin-bottom: RelativeUnits(nth($value-property, 1), nth($value-property, 2), $mode);\n      }\n      @else {\n        margin-bottom: RelativeUnits(nth($value-property, 1), 1, $mode);\n      }\n    }\n\n    @if $name-property == 'm-l' {\n      @if length($value-property) > 1 {\n        margin-left: RelativeUnits(nth($value-property, 1), nth($value-property, 2), $mode);\n      }\n      @else {\n        margin-left: RelativeUnits(nth($value-property, 1), 1, $mode);\n      }\n    }\n\n    @if $name-property == 'm-r' {\n      @if length($value-property) > 1 {\n        margin-right: RelativeUnits(nth($value-property, 1), nth($value-property, 2), $mode);\n      }\n      @else {\n        margin-right: RelativeUnits(nth($value-property, 1), 1, $mode);\n      }\n    }\n\n  //paddings\n    @if $name-property == 'p-t' {\n      @if length($value-property) > 1 {\n        padding-top: RelativeUnits(nth($value-property, 1), nth($value-property, 2), $mode);\n      }\n      @else {\n        padding-top: RelativeUnits(nth($value-property, 1), 1, $mode);\n      }\n    }\n\n    @if $name-property == 'p-b' {\n      @if length($value-property) > 1 {\n        padding-bottom: RelativeUnits(nth($value-property, 1), nth($value-property, 2), $mode);\n      }\n      @else {\n        padding-bottom: RelativeUnits(nth($value-property, 1), 1, $mode);\n      }\n    }\n\n    @if $name-property == 'p-l' {\n      @if length($value-property) > 1 {\n        padding-left: RelativeUnits(nth($value-property, 1), nth($value-property, 2), $mode);\n      }\n      @else {\n        padding-left: RelativeUnits(nth($value-property, 1), 1, $mode);\n      }\n    }\n\n    @if $name-property == 'p-r' {\n      @if length($value-property) > 1 {\n        padding-right: RelativeUnits(nth($value-property, 1), nth($value-property, 2), $mode);\n      }\n      @else {\n        padding-right: RelativeUnits(nth($value-property, 1), 1, $mode);\n      }\n    }\n  }\n}\n\n@mixin first-elements($first:1) {\n  *:nth-child(-n+#{$first)}) {\n    @content;\n  }\n}\n\n@mixin last-elements($last:1) {\n  *:nth-last-child(-n+#{$last)}) {\n    @content;\n  }\n}\n\n//cssgrids\n\n@mixin SmartGrid($width, $LIST-rows) {\n\n  $LIST-names_areas-row-map: ();\n  $LIST-exceptions-intel_stretch: ();\n  @each $row in $LIST-rows {\n\n    $LIST-names_areas: ();\n    @each $name, $width-area in $row {\n      $LIST-names_areas: append($LIST-names_areas, $name);\n    }\n    $LIST-names_areas-row-map: append($LIST-names_areas-row-map, $LIST-names_areas);\n  }\n\n  @for $indexer from 1 through length($LIST-names_areas-row-map) - 1 {\n\n    @if LIST-GetSubElement($LIST-names_areas-row-map, $indexer, 1) == LIST-GetSubElement($LIST-names_areas-row-map, $indexer + 1, 1) {\n      $LIST-exceptions-intel_stretch: append($LIST-exceptions-intel_stretch, LIST-GetSubElement($LIST-names_areas-row-map, $indexer, 1));\n    }\n    @if LIST-GetSubElement($LIST-names_areas-row-map, $indexer, -1) == LIST-GetSubElement($LIST-names_areas-row-map, $indexer + 1, -1) {\n      $LIST-exceptions-intel_stretch: append($LIST-exceptions-intel_stretch, LIST-GetSubElement($LIST-names_areas-row-map, $indexer, -1));\n    }\n  }\n\n  //интеллектуальное округление\n  $indexer-row: 1;\n  $LIST-width_area-all: ();\n  @each $row in $LIST-rows {\n\n    $width-real: 0;\n\n    $LIST-names_areas-row: ();\n    $LIST-width_area_100_ceil-row: ();\n    $width-real-CEILED: 0;\n    $indexer-area: 1;\n\n    @each $name, $width-area in $row {\n\n      $LIST-width_area_100_ceil-row: append($LIST-width_area_100_ceil-row, ceil($width-area/100) * 100);\n      $width-real: $width-real + $width-area;\n      $width-real-CEILED: $width-real-CEILED + nth($LIST-width_area_100_ceil-row, $indexer-area);\n      $LIST-names_areas-row: append($LIST-names_areas-row, $name);//каталог имен, идущих по порядку, чтоб можно было обратиться по имени в массив листареа\n      $indexer-area: $indexer-area + 1;\n    }\n    @debug $LIST-width_area_100_ceil-row;\n\n    @if $width > $width-real-CEILED or $width == $width-real-CEILED {\n\n      @for $indexer-area from 1 through length($row) {\n\n        $LIST-rows: set-nth($LIST-rows, $indexer-row, map-merge(nth($LIST-rows, $indexer-row), (nth($LIST-names_areas-row, $indexer-area):nth($LIST-width_area_100_ceil-row, $indexer-area))));\n        //$LIST-width_area-all: append($LIST-width_area-all, nth($LIST-width_area_100_ceil-row, $indexer-area));\n      }\n      @debug $LIST-rows;\n    }\n\n    @else {\n\n      $LIST-names_areas-row-width-10_ceil: ();\n      $width-real-CEILED: 0;\n      $indexer-area: 1;\n\n      @each $name, $width-area in $row {\n\n        $LIST-names_areas-row-width-10_ceil: append($LIST-width_area_100_ceil-row, ceil($width-area/10) * 10);\n        $width-real-CEILED: $width-real-CEILED + nth($LIST-names_areas-row-width-10_ceil, $indexer-area);\n        $indexer-area: $indexer-area + 1;\n      }\n      //@debug $LIST-names_areas-row-width-10_ceil;\n\n      @if $width > $width-real-CEILED or $width == $width-real-CEILED {\n\n        @for $indexer-area from 1 through length($row) {\n\n          $LIST-rows: set-nth($LIST-rows, $indexer-row, map-merge(nth($LIST-rows, $indexer-row), (nth($LIST-names_areas-row, $indexer-area):nth($LIST-names_areas-row-width-10_ceil, $indexer-area))));\n          //$LIST-width_area-all: append($LIST-width_area-all, nth($LIST-names_areas-row-width-10_ceil, $indexer-area));\n        }\n      }\n    }\n\n    $indexer-row: $indexer-row + 1; //шаг по строкам, чтоб можно было обратиться напрямую к конкретному элементу массива $LIST-rows\n  }\n\n  @debug \"exceptions\";\n  //создание списка исключений\n  @each $exception in $LIST-exceptions-intel_stretch {\n    $indexer-row: 1;\n    @each $row in $LIST-rows {\n      @each $name, $width-area in $row {\n        @if $name == $exception {\n          $LIST-rows: set-nth($LIST-rows, $indexer-row, map-merge(nth($LIST-rows, $indexer-row), ($name:LIST-MAP_GetSubMin-name($LIST-rows, $name))));\n        }\n      }\n      $indexer-row: $indexer-row + 1;\n    }\n  }\n  //поправка запись обновленных данных в общий список ширин всех областей\n  @each $row in $LIST-rows {\n    @each $name, $width-area in $row {\n\n      $LIST-width_area-all: append($LIST-width_area-all, $width-area);\n    }\n  }\n\n  @debug $LIST-rows;\n  $fraction: 0;\n\n  //фракционные вычисления\n  $LIST-width_area-all: append($LIST-width_area-all, $width);//список ширин областей ВО ВСЕХ строках + максимальная ширина строки В ПИКСЕЛЯХ\n  $indexer-row: 1;\n  //@debug $LIST-width_area-all;\n  @each $row in $LIST-rows {\n\n    $LIST-names_areas-row: ();//список имен всех областей в ТЕКУЩЕЙ строке\n    @each $name, $width-area in $row {\n      $LIST-names_areas-row: append($LIST-names_areas-row, $name);\n    }\n\n    $fraction: GCF($LIST-width_area-all);\n\n    $LIST-width_area-row-fr: ();//список ширин областей в ТЕКУЩЕЙ строке\n    $TOTAL_width_area-row-fr: 0;//реальная ширина ТЕКУЩЕЙ строки В ФРАКЦИЯХ\n    //расчет начального сдвига для списка\n    $index-shifter: 0;\n    $timer: $indexer-row - 1;\n    @while $timer > 0 {\n      $index-shifter: $index-shifter + length(nth($LIST-rows, $timer));\n      $timer: $timer - 1;\n    }\n\n    //расчет ширин в фракциях для областей в текущей строке + расчет реальной длины строки в фракциях\n    @for $indexer from 1 through length($row) {\n\n      $LIST-width_area-row-fr: append($LIST-width_area-row-fr, nth($LIST-width_area-all, $index-shifter + $indexer)/$fraction);\n      $TOTAL_width_area-row-fr: $TOTAL_width_area-row-fr + nth($LIST-width_area-row-fr, $indexer);\n    }\n\n    @debug LIST-width_area-row-fr $LIST-width_area-row-fr;\n\n    $max: nth($LIST-width_area-row-fr, 1);\n  \t$max-index: 1;\n    $COUNTER-exception-row: 0;\n  \t@for $indexer from 1 through length($LIST-width_area-row-fr) {\n  \t\t@if $max < nth($LIST-width_area-row-fr, $indexer) and LIST-CheckInclude($LIST-exceptions-intel_stretch, nth($LIST-names_areas-row, $indexer)) == false {\n  \t\t\t$max: nth($LIST-width_area-row-fr, $indexer);\n  \t\t\t$max-index: $indexer;\n  \t\t}\n      @if LIST-CheckInclude($LIST-exceptions-intel_stretch, nth($LIST-names_areas-row, $indexer)) {\n        $COUNTER-exception-row: $COUNTER-exception-row + 1;\n      }\n  \t}\n    @debug counter $COUNTER-exception-row;\n\n    $REST-width_area-row: $width/$fraction - $TOTAL_width_area-row-fr;//остаток от максимальной ширины строки в ФРАКЦИЯХ\n    @debug rest $REST-width_area-row;\n    $width_area-fr-INCREMENT: $REST-width_area-row / (length($LIST-width_area-row-fr) - $COUNTER-exception-row);//среднее значение увеличения всех областей в строке для ликвидирования остатка В ФРАКЦИЯХ\n    @debug increment $width_area-fr-INCREMENT;\n\n    //intelligence stretcher\n    $indexer: 1;\n    @while $REST-width_area-row > 0 {\n\n      @if $indexer == $max-index {\n        $LIST-width_area-row-fr: set-nth($LIST-width_area-row-fr, $indexer, nth($LIST-width_area-row-fr, $indexer) + ceil($width_area-fr-INCREMENT));\n        $REST-width_area-row: $REST-width_area-row - ceil($width_area-fr-INCREMENT);\n      }\n      @else if LIST-CheckInclude($LIST-exceptions-intel_stretch, nth($LIST-names_areas-row, $indexer)) == false {\n        $LIST-width_area-row-fr: set-nth($LIST-width_area-row-fr, $indexer, nth($LIST-width_area-row-fr, $indexer) + floor($width_area-fr-INCREMENT));\n        $REST-width_area-row: $REST-width_area-row - floor($width_area-fr-INCREMENT);\n      }\n      $indexer: $indexer + 1;\n    }\n\n    @debug LIST-width_area-row-fr-increased $LIST-width_area-row-fr;\n\n    @for $indexer-area from 1 through length($row) {\n      $LIST-rows: set-nth($LIST-rows, $indexer-row, map-merge(nth($LIST-rows, $indexer-row), (nth($LIST-names_areas-row, $indexer-area):nth($LIST-width_area-row-fr, $indexer-area))));\n    }\n\n    $indexer-row: $indexer-row + 1\n  }\n\n  @debug $LIST-rows;\n\n  //формирование финальной строки\n  $width_row-fr: $width/$fraction;\n  grid-template-columns: repeat($width_row-fr, 1fr);\n  grid-template-rows: auto;\n  $STRING-name_area-all: \"\";\n  $LIST-name_area-all: ();\n  @debug $STRING-name_area-all;\n  @each $row in $LIST-rows {\n\n    $indexer-area: 1;\n    $STRING-name_area-all: \"\";\n    @each $name, $width_area-fr in $row {\n      @for $indexer from 1 through $width_area-fr {\n\n        $STRING-name_area-all: $STRING-name_area-all + $name;\n        @if $indexer-area != length($row) {\n          $STRING-name_area-all: $STRING-name_area-all + \" \";\n        }\n        @else {\n          @if $indexer != $width_area-fr {\n            $STRING-name_area-all: $STRING-name_area-all + \" \";\n          }\n        }\n      }\n      $indexer-area: $indexer-area + 1;\n    }\n    $LIST-name_area-all: append($LIST-name_area-all, BracketFunction($STRING-name_area-all));\n    @debug stringlocal BracketFunction($STRING-name_area-all);\n\n  }\n  @debug listarea $LIST-name_area-all;\n\n  $STRING-grid: \"\";\n  @for $indexer from 1 through length($LIST-name_area-all) {\n    $STRING-grid: $STRING-grid + nth($LIST-name_area-all, $indexer);\n  }\n  @debug $STRING-grid;\n  grid-template-areas:\n    #{$STRING-grid};\n}\n\n\n//-properties\n\n@mixin border-radius($radius, $h-scaler: 0.2, $v-scaler: 0.2, $mode: $GLOBAL_SCALER) {\n  border-radius: RelativeUnitsComplex($radius, $h-scaler, $v-scaler, $mode);\n}\n\n//-transforms\n\n@mixin TransformXY ($OffsetX, $OffsetY, $scaler: 1, $mode: $GLOBAL_SCALER) {\n\n\ttransform: translate(RelativeUnits($OffsetX, $scaler, $mode, horizontal), RelativeUnits($OffsetY, $scaler, $mode, vertical));\n\t-moz-transform: translate(RelativeUnits($OffsetX, $scaler, $mode, horizontal), RelativeUnits($OffsetY, $scaler, $mode, vertical)); /* Firefox 3.5+ */\n\t-webkit-transform: translate(RelativeUnits($OffsetX, $scaler, $mode, horizontal), RelativeUnits($OffsetY, $scaler, $mode, vertical)); /* Safari 3.1+ и Chrome 2.0+ */\n\t-o-transform: translate(RelativeUnits($OffsetX, $scaler, $mode, horizontal), RelativeUnits($OffsetY, $scaler, $mode, vertical)); /* Opera 10.5+ */\n\t-ms-transform: translate(RelativeUnits($OffsetX, $scaler, $mode, horizontal), RelativeUnits($OffsetY, $scaler, $mode, vertical)); /* IE 9.0 */\n}\n\n@mixin TransformScale ($ScaleX: 1, $ScaleY: 1) {\n\ttransform: scale($ScaleX, $ScaleY);\n\t-moz-transform: scale($ScaleX, $ScaleY); /* Firefox 3.5+ */\n\t-webkit-transform: scale($ScaleX, $ScaleY); /* Safari 3.1+ и Chrome 2.0+ */\n\t-o-transform: scale($ScaleX, $ScaleY); /* Opera 10.5+ */\n\t-ms-transform: scale($ScaleX, $ScaleY); /* IE 9.0 */\n}\n\n@mixin TransformRotate ($Rotate) {\n\ttransform: rotate($Rotate);\n\t-moz-transform: rotate($Rotate); /* Firefox 3.5+ */\n\t-webkit-transform: rotate($Rotate); /* Safari 3.1+ и Chrome 2.0+ */\n\t-o-transform: rotate($Rotate); /* Opera 10.5+ */\n\t-ms-transform: rotate($Rotate); /* IE 9.0 */\n}\n","\n//-vision\n\n.-hide-phone-small {\n\t@include _phone-small {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-phone-big {\n\t@include _phone-big {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-tablet-small {\n\t@include _tablet-small {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-tablet-middle {\n\t@include _tablet-middle {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-tablet-big {\n\t@include _tablet-big {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-desktop-small {\n\t@include _desktop-small {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide {\n\tdisplay: none;\n}\n\n\n.-show-phone-small {\n\t@include _phone-small {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-phone-big {\n\t@include _phone-big {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-tablet-small {\n\t@include _tablet-small {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-tablet-middle {\n\t@include _tablet-middle {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-tablet-big {\n\t@include _tablet-big {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-desktop-small {\n\t@include _desktop-small {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show {\n\tdisplay: flex;\n}\n\n.-invisible-phone-small {\n\t@include _phone-small {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-phone-big {\n\t@include _phone-big {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-tablet-small {\n\t@include _tablet-small {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-tablet-middle {\n\t@include _tablet-middle {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-tablet-big {\n\t@include _tablet-big {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-desktop-small {\n\t@include _desktop-small {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible {\n\tvisibility: hidden;\n}\n\n.-visible-phone-small {\n\t@include _phone-small {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-phone-big {\n\t@include _phone-big {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-tablet-small {\n\t@include _tablet-small {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-tablet-middle {\n\t@include _tablet-middle {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-tablet-big {\n\t@include _tablet-big {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-desktop-small {\n\t@include _desktop-small {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible {\n\tvisibility: visible;\n}\n\n//-font-weights\n\n.thin {\n  font-weight: 100;\n}\n.light {\n  font-weight: 300;\n}\n.regular {\n  font-weight: 400;\n}\n.medium {\n  font-weight: 500;\n}\n.semi-bold {\n  font-weight: 600;\n}\n.bold {\n  font-weight: 700;\n}\n.boldest {\n  font-weight: 900;\n}\n\n//-flex\n\n.flex {\n\tdisplay: flex;\n}\n\n.-column {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.-row {\n\tdisplay: flex;\n\tflex-direction: row;\n}\n\n.-column-r {\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n}\n\n.-row-r {\n\tdisplay: flex;\n\tflex-direction: row-reverse;\n}\n\n.-wrap {\n \tflex-wrap: wrap;\n}\n\n.-nowrap {\n \tflex-wrap: nowrap;\n}\n\n.-jc-s {\n\tjustify-content: flex-start;\n}\n\n.-jc-c {\n\tjustify-content: center;\n}\n\n.-jc-sb {\n\tjustify-content: space-between;\n}\n\n.-jc-sa {\n\tjustify-content: space-around;\n}\n\n.-jc-e {\n\tjustify-content: flex-end;\n}\n\n.-ai-s {\n\talign-items: flex-start;\n}\n\n.-ai-stretch {\n\talign-items: stretch;\n}\n\n.-ai-c {\n\talign-items: center;\n}\n\n.-ai-e {\n\talign-items: flex-end;\n}\n\n.-as-s {\n\talign-self: flex-start;\n}\n\n.-as-stretch {\n\talign-self: stretch;\n}\n\n.-as-c {\n\talign-self: center;\n}\n\n.-as-e {\n\talign-self: flex-end;\n}\n\n.-ac-s {\n\talign-content: flex-start;\n}\n\n.-ac-c {\n\talign-content: center;\n}\n\n.-ac-sb {\n\talign-content: space-between;\n}\n\n.-ac-stretch {\n\talign-content: stretch;\n}\n\n.-ac-sa {\n\talign-content: space-around;\n}\n\n.-ac-e {\n\talign-content: flex-end;\n}\n\n@for $i from 1 to 10 {\n\t.-grow-#{$i} {\n\t\tflex-grow: #{$i};\n\t}\n}\n\n@for $i from 1 to 10 {\n\t.-shrink-#{$i} {\n\t\tflex-shrink: #{$i};\n\t}\n}\n\n//-width\n\n.w-fit-content {\n\twidth: fit-content;\n\twidth: -moz-fit-content;\n\twidth: -webkit-fit-content;\n}\n\n@for $i from 1 to 100 {\n\t.w-#{$i} {\n\t\twidth: calc(#{$i} * 1%);\n\t}\n}\n\n//-text\n\n.-text-r {\n\ttext-align: right;\n}\n\n.-text-l {\n\ttext-align: left;\n}\n\n.-text-c {\n\ttext-align: center;\n}\n\n.-text-j {\n\ttext-align: justify;\n}\n\n.-upper {\n\ttext-transform: uppercase;\n}\n\n.-lower {\n\ttext-transform: lowercase;\n}\n\n//-positions\n.pos-r {\n\tposition: relative;\n}\n\n.pos-a {\n\tposition: absolute;\n}\n\n.pos-f {\n\tposition: fixed;\n}\n\n.pos-s {\n\tposition: sticky;\n\tposition: -webkit-sticky; /* Safari */\n}\n\n//-sides align\n\n.-bot {\n\tbottom: 0;\n}\n\n.-top {\n\ttop: 0;\n}\n\n.-left {\n\tleft: 0;\n}\n\n.-right {\n\tright: 0;\n}\n\n@for $i from 1 to 50 {\n\t.-bot-#{$i} {\n\t\tbottom: calc(#{$i} * 1%);\n\t}\n}\n\n@for $i from 1 to 50 {\n\t.-top-#{$i} {\n\t\ttop: calc(#{$i} * 1%);\n\t}\n}\n\n@for $i from 1 to 50 {\n\t.-left-#{$i} {\n\t\tleft: calc(#{$i} * 1%);\n\t}\n}\n\n@for $i from 1 to 50 {\n\t.-right-#{$i} {\n\t\tright: calc(#{$i} * 1%);\n\t}\n}\n","// segments\n// check src/framework/scss/global-scaler.scss if you are not fullhd\n@charset \"UTF-8\";\n@import \"./../framework/scss/fonts/RubikOne.scss\"; // fonts\n@import \"./../framework/scss/main.scss\"; // framework\n\n$scaler: 0.9;\n\n* {\n    z-index: 1;\n}\n\n.whole-content {\n    position: relative;\n    background: #F0F0F0;\n    min-height: 100vh;\n    width: 100vw;\n    overflow: hidden;\n\n    @include _phone-big {\n        align-items: center;\n    }\n}\n\n.stack-array {\n    background: #2a2a2e;\n    width: 100%;\n    @include height(322, $scaler);\n    @include margin-padding(('p-l': (130 $scaler) ));\n\n    .item {\n        width: auto;\n        @include height(120, $scaler);\n        @include margin-padding(('m-l': (22 $scaler), 'm-r': (22 $scaler) ));\n        img {\n            width: auto;\n            height: 100%;\n        }\n    }\n\n    @include _phone-big {\n        padding: 0 20px;\n        justify-content: space-around;\n    }\n}\n\n.title {\n    font-family: 'Rubik One';\n    font-weight: 400;\n    color: #2a2a2e;\n    @include FontLineSize(0.35, 0.35, 0.3, 72, 10);\n    @include margin-padding(('m-l': (170 $scaler) ));\n\n    .purple {\n        color: #9B2DC2;\n    }\n\n    @include _phone-big {\n        margin: 0;\n    }\n}\n\n.code-block {\n    position: absolute;\n    top: 0;\n    right: 0;\n    height: 100%;\n    @include width(865, 1.1);\n    background-image: url('../img/code.png');\n    background-size: cover;\n    background-position: left center;\n    background-repeat: no-repeat;\n\n    @include _phone-big {\n        width: 100%;\n        z-index: 0;\n        opacity: 0.4;\n    }\n}\n\n.credentials-array {\n    @include width(360, 0.5);\n    @include height(48, 0.5);\n    @include margin-padding(('m-l': (360 $scaler) ));\n\n    img {\n        @include height(48, 0.5);\n        width: auto;\n\n        &:hover {\n            filter: invert(23%) sepia(27%) saturate(6789%) hue-rotate(272deg) brightness(98%) contrast(95%);\n        }\n    }\n\n    @include _phone-big {\n        margin: 0;\n    }\n}\n\n.popup-window {\n    position: absolute;\n    visibility: hidden;\n    transition: 0.75s;\n    opacity: 0;\n    bottom: 0;\n    left: 0;\n    @include FontLineSize(0.3, 0.3, 0.4, 36, 10);\n    color: #f0f0f0;\n    background-color: #2a2a2e;\n    font-family: 'Roboto';\n    font-weight: 500;\n    @include width(402, 0.5);\n    @include height(76, 0.5);\n    border-radius: 0px RelativeUnits(30, 0.5) 0px 0px;\n}\n","//-calculates\n\n@function RelativeUnits($object, $scaler: 1, $mode: desktop-middle, $orientation: horizontal) {\n\n\t@if ($orientation == vertical) {\n\t\t@return calc(#{$scaler * $object/GetDeviceScreen($mode, $orientation)} * 100vh + #{(1 - $scaler) * $object * 1px});\n\t}\n\t@else if ($orientation == horizontal) {\n\t\t@return calc(#{$scaler * $object/GetDeviceScreen($mode, $orientation)} * 100vw + #{(1 - $scaler) * $object * 1px});\n\t}\n}\n\n@function RelativeUnitsComplex($object, $scaler: 1, $vertical-scaler: 0.2, $mode: desktop-middle) {\n\t@return calc(#{$scaler * (1 - $vertical-scaler) * $object/GetDeviceScreen($mode, horizontal)} * 100vw + #{$scaler * $vertical-scaler * $object/GetDeviceScreen($mode, vertical)} * 100vh + #{(1 - ($scaler + $vertical-scaler)) * $object * 1px});\n}\n\n@function BracketFunction($string) {\n  @return '\"#{$string}\"';\n}\n\n@function CheckInt($number) {\n\t@if ($number - floor($number)) == 0 {\n\t\t@return true;\n\t}\n\t@else {\n\t\t@return false;\n\t}\n}\n\n@function GCF($list) {\n\n\t$gcf: 1;\n\t$gcf-maybe: 1;\n\n\t@while $gcf-maybe <= LIST_GetMin($list) {\n\n\t\t$rest: 0;\n\t\t@for $indexer from 1 through length($list) {\n\t\t\t$rest: $rest + (nth($list, $indexer)/$gcf-maybe - floor(nth($list, $indexer)/$gcf-maybe));\n\t\t}\n\t\t@if $rest == 0 {\n\t\t\t$gcf: $gcf-maybe;\n\t\t}\n\t\t$gcf-maybe: $gcf-maybe + 1;\n\t}\n\n\t@return $gcf;\n}\n\n//-Gets\n\n@function GetDeviceScreen($mode, $orientation) {\n\t@return map-get($devices, \"\" + $mode + \"-\" + $orientation);\n}\n\n//--Lists\n\n@function LIST-GetSubElement($list, $element, $sub-element) {\n\t$i-element: 1;\n\t@each $list_element in $list {\n\t\t@if ($i-element == $element) {\n\t\t\t@return nth($list_element, $sub-element);\n\t\t}\n\t\t$i-element: $i-element + 1;\n\t}\n}\n\n@function LIST-MAP_GetSubMin-name($list, $name) {\n\t$LIST-result: ();\n\t@each $list_element in $list {\n\t\t@if map-get($list_element, $name) != null {\n\t\t\t$LIST-result: append($LIST-result, map-get($list_element, $name));\n\t\t}\n\t}\n\t$result: LIST_GetMin($LIST-result);\n\t@return $result;\n}\n\n@function LIST-GetMax($list) {\n\t$max: nth($list, 1);\n\t@for $indexer from 1 through length($list) {\n\t\t@if $max < nth($list, $indexer) {\n\t\t\t$max: nth($list, $indexer);\n\t\t}\n\t}\n\t@return $max;\n}\n\n@function LIST-GetMin($list) {\n\t$min: nth($list, 1);\n\t@for $indexer from 1 through length($list) {\n\t\t@if $min > nth($list, $indexer) {\n\t\t\t$min: nth($list, $indexer);\n\t\t}\n\t}\n\t@return $min;\n}\n\n@function LIST-GetMaxIndex($list) {\n\t$max: nth($list, 1);\n\t$max-index: 1;\n\t@for $indexer from 1 through length($list) {\n\t\t@if $max < nth($list, $indexer) {\n\t\t\t$max: nth($list, $indexer);\n\t\t\t$max-index: $indexer;\n\t\t}\n\t}\n\t@return $max-index;\n}\n\n@function LIST-GetMinIndex($list) {\n\t$min: nth($list, 1);\n\t$min-index: 1;\n\t@for $indexer from 1 through length($list) {\n\t\t@if $min > nth($list, $indexer) {\n\t\t\t$min: nth($list, $indexer);\n\t\t\t$min-index: $indexer;\n\t\t}\n\t}\n\t@return $min-index;\n}\n\n@function LIST-CheckInclude($list, $element) {\n\t$result: false;\n\t@each $list_element in $list {\n\t\t@if $list_element == $element {\n\t\t\t$result: true;\n\t\t}\n\t}\n\t@return $result;\n}\n\n@function ARRAY-CheckInclude($array, $index) {\n\t@if nth($array, $index) {\n\t\t@return true;\n\t}\n\t@else {\n\t\t@return false;\n\t}\n}\n\n\n//-colors\n/*\n@function darker($color, $amount) {\n\t@return color.scale($color, $lightness: calc((-1) * $amount));\n}\n\n@function lighter($color, $amount) {\n\t@return color.scale($color, $lightness: $amount);\n}\n\n@function desaturate($color, $amount) {\n\t@return color.scale($color, $saturation: calc((-1) * $amount));\n}\n\n@function saturate($color, $amount) {\n\t@return color.scale($color, $saturation: $amount);\n}\n\n@function opacity-plus($color, $amount) {\n\t@return color.scale($color, $alpha: $amount);\n}\n\n@function opacity-minus($color, $amount) {\n\t@return color.scale($color, $alpha: calc((-1) * $amount));\n}\n*/\n"],"sourceRoot":""}